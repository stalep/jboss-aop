<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id: build.xml 56876 2006-09-15 00:11:10Z scott.stark@jboss.org $ -->

<project default="main" name="JBossAOP/Build">

  <!-- ================================================================== -->
  <!-- Setup                                                              -->
  <!-- ================================================================== -->

  <!--
     | Include the common Buildmagic elements.
     |
     | This defines several different targets, properties and paths.
     | It also sets up the basic extention tasks amoung other things.
   -->

  &buildmagic;


  <!-- ================================================================== -->
  <!-- Initialization                                                     -->
  <!-- ================================================================== -->

  <!--
     | Initialize the build system.  Must depend on '_buildmagic:init'.
     | Other targets should depend on 'init' or things will mysteriously fail.
   -->

  <target name="init" unless="init.disable" depends="_buildmagic:init">
  </target>


  <!-- ================================================================== -->
  <!-- Configuration                                                      -->
  <!-- ================================================================== -->

  <!--
     | Configure the build system.
     |
     | This target is invoked by the Buildmagic initialization logic and
     | should contain module specific configuration elements.
   -->

  <target name="configure" unless="configure.disable">

    <!-- =================== -->
    <!-- Basic Configuration -->
    <!-- =================== -->

    <!-- Module name(s) & version -->
    <property name="module.name" value="jboss"/>
    <property name="module.Name" value="JBoss AOP Build"/>
    <property name="module.version" value="${version.major}.${version.minor}.${version.revision}${version.tag}"/>

    <!-- Defines repository.home -->
    <property file="local.properties"/>

    <!-- ============== -->
    <!-- Modules/Groups -->
    <!-- ============== -->

    <!-- The group to use by default -->
    <property name="groups" value="default"/>

    <!-- Sets up the module configuration. -->
    <moduleconfig property="modules" selected="${groups}">

      <!-- Modules -->
      <module name="aop"/>
      <module name="asintegration"/>
      <module name="aspects"/>

      <!-- Module groups -->

      <!--this lets you recompile a single module using a command line like
./build.sh -emacs -Dgroups=single -Dsingle-module=server
      -->
      <group name="single">
        <include modules="${single-module}"/>
      </group>

      <group name="core">
         <include modules="aop"/>
         <include modules="asintegration"/>
         <include modules="aspects"/>
      </group>

      <group name="default">
        <include groups="core"/>
      </group>

      <group name="most">
        <include groups="core"/>
      </group>

    </moduleconfig>

    <!-- Show the module configuration -->
    <echo>groups:  ${groups}</echo>
    <echo>modules: ${modules}</echo>

    <!-- The combined dependent module classpath -->
    <path id="dependentmodule.classpath">
    </path>

    <!-- ===== -->
    <!-- Tasks -->
    <!-- ===== -->

    <!-- Skip any missing modules and issue a warning -->
    <property name="executemodules.skipmissing" value="true"/>

    <!-- The header and footer displayed during each module execution -->
    <property name="executemodules.header"><![CDATA[
    ======================================================================
    ==  Executing '${target}' in module '${module}'...
    ==]]></property>

    <property name="executemodules.footer"><![CDATA[
    ==
    ==  Finished with '${target}' in module '${module}'.
    ======================================================================
    ]]></property>

    <property name="executemodules.exportproperties">
       version.major,
       version.minor,
       version.revision,
       version.tag,
       version.name,
       version.cvstag,

       specification.title,
       specification.version,
       specification.vendor,

       implementation.title,
       implementation.version,
       implementation.vendor,
       implementation.vendor.id,
       implementation.url
    </property>

    <!-- Bits for building source archives -->
    <patternset id="source.ignore">
      <exclude name="**/output/**"/>
      <exclude name="**/CVS/**" />
    </patternset>
</target>

  <!-- ================================================================== -->
  <!-- Module Pass-through Targets                                        -->
  <!-- ================================================================== -->

  <!--
     | These targets will execute all configured modules with the specified
     | target.
   -->
  <target name="modules-most" depends="_buildmagic:modules:most" />
  <target name="modules-main" depends="_buildmagic:modules:main"/>
  <target name="modules-release" depends="_buildmagic:modules:release"/>
  <target name="modules-tests" depends="_buildmagic:modules:tests"/>
  <target name="modules-clean" depends="_buildmagic:modules:clean"/>
  <target name="modules-clobber" depends="_buildmagic:modules:clobber"/>
  <target name="modules-docs" depends="_buildmagic:modules:docs"/>

  <!-- ================================================================== -->
  <!-- Module Pass-through Hooks                                          -->
  <!-- ================================================================== -->

  <!--
     | These hooks are executed after the above pass-through targets have
     | finished with a given module.
   -->

   <!-- ======== -->
   <!-- Test     -->
   <!-- ======== -->

   <target name="_module-test-most">
     <property name="_module.name" value="test" override="true"/>
     <property name="_module.output" override="true"
           value="${project.root}/${_module.name}/output"/>
   </target>

   <!-- ================================================================== -->
   <!-- Install & Release                                                  -->
   <!-- ================================================================== -->

   <target name="install"
	  description="Install the structure for a release."
     depends="init"
     >
   </target>

   <target name="release-output"
      description="Builds the default release structure."
      depends="modules-release"
      >
      <ant antfile="build-release.xml" target="release-no-reference-docs"/>
   </target>

   <target name="release"
      description="Builds the default release structure."
      depends="init, clean, modules-release, aop.reference.docs"
      >
      <ant antfile="build-release.xml" target="release-no-reference-docs"/>
      <ant antfile="build-release.xml" target="release-reference-docs"/>

   	<zip destfile="${project.release}.zip">
         <fileset dir="${project.release}"/>
         <fileset dir="." includes="RELEASE_NOTES.html"/>
      </zip>
   	<move file="${project.release}.zip" todir="${module.output}/lib"/>
  </target>

  <target name="release-dryrun"
      description="Builds the default release structure assuming that everything already has been built"
      depends="init">
    <ant antfile="build-release.xml" target="release-no-reference-docs"/>
    <ant antfile="build-release.xml" target="release-reference-docs"/>
  </target>

  <!-- ================================================================== -->
  <!-- Source Archives                                                    -->
  <!-- ================================================================== -->

  <target name="source-zip"
	  description="Builds a ZIP source distribution."/>

  <target name="source-tar"
	  description="Builds a TAR source distribution."/>

  <!-- ================================================================== -->
  <!-- Cleaning                                                           -->
  <!-- ================================================================== -->

  <!-- Clean up all build output -->
  <target name="clean" depends="createthirdparty,_buildmagic:clean, modules-clean"
	  description="Cleans up most generated files.">
     <delete dir="output"/>
  </target>

  <!-- Clean up all generated files -->
  <target name="clobber" depends="_buildmagic:clobber, clean, modules-clobber"
	  description="Cleans up all generated files.">
    <delete file="${module.root}/*_run.log"/>
  </target>


  <!-- ================================================================== -->
  <!-- Misc.                                                              -->
  <!-- ================================================================== -->

  <target name="main" depends="most"
	  description="Executes the default target (most)."/>

  <target name="most" depends="createthirdparty, modules-most, install"
	  description="Executes all modules and builds most everything."/>

  <target name="help" depends="_buildmagic:help:build"
          description="Show this help message."/>
   <!-- create the thirdparty folder from items in the repository -->
   <!-- then generate a new libraries.ent file and include it in  -->
   <!-- the build                                                 -->
   <target name="createthirdparty" unless="inhibit.downloads"
      depends="check.inhibit.downloads, set.proxy">
      <ant antfile="build-thirdparty.xml" target="generate-lib-file"/>
   </target>

   <!-- check if thirdparty libraries are to be downloaded -->
   <target name="check.inhibit.downloads">
      <condition property="inhibit.downloads">
         <or>
            <uptodate property="dependencies.current"
 	      srcfile="build-thirdparty.xml"
               targetfile="../thirdparty/libraries.ent"/>
            <istrue value="${nodownload}"/>
         </or>
      </condition>
  </target>

  <!-- check if the the user has specied proxy settings -->
  <target name="check.proxy">
    <condition property="hasproxy">
        <and>
            <isset property="proxy.host"/>
            <isset property="proxy.port"/>
            <not>
                <equals arg1="" arg2="${proxy.host}" trim="true"/>
            </not>
            <not>
                <equals arg1="" arg2="${proxy.port}" trim="true"/>
            </not>
        </and>
    </condition>
  </target>

  <!-- set proxy settings -->
  <target name="set.proxy" if="hasproxy" depends="check.proxy">
    <echo>Proxy is set to ${proxy.host}:${proxy.port}</echo>
    <setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}"/>
  </target>

  <target name="aop.reference.docs" depends="init" description="Builds the reference manual for JBoss AOP that should be part of ths distribution">
     <ant antfile="build.xml" dir="../aop/docs/reference"/>
  </target>

   <target name="update-repository"
      description="Copies the jars to the snapshot in the repository. The version can be overridden with the -Dversion=1.2.3 property">
      <property file="local.properties"/>
      <fail unless="repository.home">repository.home must be set in a local.properties file</fail>

      <condition property="ver" value="snapshot" else="${version}">
         <not>
            <isset property="version"/>
         </not>
      </condition>
      <echo>${ver}</echo>

      <property name="aop15.dir" value="${repository.home}/jboss/aop/${ver}/lib"/>
      <property name="aop14.dir" value="${repository.home}/jboss/aop14/${ver}/lib"/>

      <mkdir dir="${aop15.dir}"/>
      <mkdir dir="${aop14.dir}"/>

      <copy todir="${aop15.dir}">
         <fileset dir="../aop/output/lib">
            <include name="jboss-aop-jdk50-client.jar"/>
            <include name="jboss-aop-jdk50.jar"/>
            <include name="jboss-aop-src.zip"/>
            <include name="jrockit-pluggable-instrumentor.jar"/>
            <include name="pluggable-instrumentor.jar"/>
            <include name="jboss-aop-src.zip"/>
         </fileset>
         <fileset dir="../asintegration/output/lib">
            <include name="jboss-aop-as4-deployer.jar"/>
            <include name="jboss-aop-deployer-jdk50.jar"/>
            <include name="jboss-asintegration-src.zip"/>
         </fileset>
         <fileset dir="../aspects/output/lib">
            <include name="jboss-standalone-aspect-library-jdk50.jar"/>
            <include name="jboss-standalone-aspects-src.zip"/>
         </fileset>
      </copy>
      <copy todir="${aop14.dir}">
         <fileset dir="../aop/output/lib">
            <include name="jboss-aop.jar"/>
            <include name="jdk14-pluggable-instrumentor.jar"/>
            <include name="jrockit-pluggable-instrumentor.jar"/>
            <include name="jboss-aop-src.zip"/>
         </fileset>
         <fileset dir="../asintegration/output/lib">
            <include name="jboss-aop-as4-deployer-jdk14.jar"/>
            <include name="jboss-asintegration-src.zip"/>
         </fileset>
         <fileset dir="../aspects/output/lib">
            <include name="jboss-standalone-aspect-library-jdk14.jar"/>
            <include name="jboss-standalone-aspects-src.zip"/>
         </fileset>
      </copy>
   </target>

</project>

