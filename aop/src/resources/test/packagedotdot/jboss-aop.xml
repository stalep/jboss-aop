<aop>
   <interceptor class="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   <interceptor class="org.jboss.test.aop.packagedotdot.ConstructionInterceptor"/>
   
   <bind pointcut="execution(org.jboss.test.aop.packagedotdot..->new(int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="construction(org.jboss.test.aop.packagedotdot..->new(int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.ConstructionInterceptor"/>
   </bind>
   <bind pointcut="execution(* org.jboss.test.aop.packagedotdot..->method(int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="field(* org.jboss.test.aop.packagedotdot..->ifield)">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   
   <bind pointcut="execution(*.packagedotdot..->new(int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="construction(*.packagedotdot..->new(int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.ConstructionInterceptor"/>
   </bind>
   <bind pointcut="execution(* *.packagedotdot..->method(int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="field(* *.packagedotdot..->lfield)">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>

   <bind pointcut="execution(org.jboss.test.aop.packagedotdot.sub.*..->new(int, int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="construction(org.jboss.test.aop.packagedotdot.sub.*..->new(int, int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.ConstructionInterceptor"/>
   </bind>
   <bind pointcut="execution(* org.jboss.test.aop.packagedotdot.sub.*..->method(int, int, int))">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   <bind pointcut="field(* org.jboss.test.aop.packagedotdot.sub.*..->sfield)">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   
   <bind pointcut="all(org.jboss.test.aop.packagedotdot.all..)">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   
   <bind pointcut="call(org.jboss.test.aop.packagedotdot.callee..->new()) AND within(org.jboss.test.aop.packagedotdot.caller..) AND withincode(org.jboss.test.aop.packagedotdot.caller..->new())">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   
   <bind pointcut="call(* org.jboss.test.aop.packagedotdot.callee..->method()) AND within(org.jboss.test.aop.packagedotdot.caller..) AND withincode(* org.jboss.test.aop.packagedotdot.caller..->method())">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>
   
   <typedef name="type" expr="class(org.jboss.test.aop.packagedotdot.type..) AND has(org.jboss.test.aop.packagedotdot.type..->new(int)) AND has(* org.jboss.test.aop.packagedotdot.type..->method(int)) AND hasfield(int org.jboss.test.aop.packagedotdot.type..->field)"/>
   <bind pointcut="all($typedef{type})">
	   <interceptor-ref name="org.jboss.test.aop.packagedotdot.NotConstructionInterceptor"/>
   </bind>

</aop>