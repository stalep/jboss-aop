<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY buildmagic SYSTEM "../tools/etc/buildmagic/buildmagic.ent">
   <!ENTITY libraries SYSTEM "../thirdparty/libraries.ent">
   <!ENTITY modules SYSTEM "../tools/etc/buildmagic/modules.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="main" name="JBoss/AOP">

   <!-- ================================================================== -->
   <!-- Setup                                                              -->
   <!-- ================================================================== -->

   <!--
      | Include the common Buildmagic elements.
      |
      | This defines several different targets, properties and paths.
      | It also sets up the basic extention tasks amoung other things.
    -->

   &buildmagic;


   <!-- ================================================================== -->
   <!-- Initialization                                                     -->
   <!-- ================================================================== -->

   <!--
      | Initialize the build system.  Must depend on '_buildmagic:init'.
      | Other targets should depend on 'init' or things will mysteriously fail.
    -->

   <target name="init" unless="init.disable" depends="_buildmagic:init">
   </target>


   <!-- ================================================================== -->
   <!-- Configuration                                                      -->
   <!-- ================================================================== -->

   <!--
      | Configure the build system.
      |
      | This target is invoked by the Buildmagic initialization logic and
      | should contain module specific configuration elements.
    -->

   <target name="configure" unless="configure.disable">

      <!-- =================== -->
      <!-- Basic Configuration -->
      <!-- =================== -->

      <!-- Module name(s) & version -->
      <property name="module.name" value="aop"/>
      <property name="module.Name" value="JBoss AOP"/>

      <!-- ========= -->
      <!-- Libraries -->
      <!-- ========= -->

      &libraries;
      &modules;
      <!-- The combined library classpath -->
      <path id="library.classpath">
         <path refid="apache.log4j.classpath"/>
         <path refid="qdox.classpath"/>
         <path refid="javassist.classpath"/>
         <path refid="trove.classpath"/>
         <path refid="xdoclet.xdoclet.classpath"/>
         <path refid="apache.ant.classpath"/>
         <path refid="junit.junit.classpath"/>
         <path refid="jboss.profiler.jvmti.classpath"/>
         <path refid="jboss.common.core.classpath"/>
         <path refid="jboss.common.logging.log4j.classpath"/>
         <!--
         <path refid="jboss.common.logging.jdk.classpath"/>
         -->
         <path refid="jboss.common.logging.spi.classpath"/>
         <path refid="jboss.jboss.reflect.classpath"/>
         <path refid="jboss.jboss.mdr.classpath"/>
         <path refid="jboss.test.classpath"/>
      </path>

      <!-- Defines jrockit.home -->
      <property file="local.properties"/>

      <!-- in older versions of jrockit the weaving stuff lives in managementapi.jar, in newer in management-agent.jar -->
      <available file="${jrockit.home}/jre/lib/managementapi.jar" property="OLD_JROCKIT" value="managementapi.jar"/>
      <available file="${jrockit.home}/jre/lib/management-agent.jar" property="NEW_JROCKIT" value="rt.jar"/>
      <condition property="JROCKIT_API_AVAILABLE" value="${OLD_JROCKIT}">
         <and>
            <isset property="OLD_JROCKIT"/>
            <not>
               <isset property="NEW_JROCKIT"/>
             </not>
         </and>
      </condition>
      <condition property="JROCKIT_API_AVAILABLE" value="${NEW_JROCKIT}">
         <and>
            <isset property="NEW_JROCKIT"/>
            <not>
               <isset property="OLD_JROCKIT"/>
             </not>
         </and>
      </condition>

      <!-- ======= -->
      <!-- Modules -->
      <!-- ======= -->

      <!-- The combined dependent module classpath -->
      <path id="dependentmodule.classpath">
      </path>

      <!-- ===== -->
      <!-- Tasks -->
      <!-- ===== -->

      <!-- Where source files live -->
      <property name="source.java" value="${module.source}/main"/>
      <property name="source15.java" value="${module.source}/jdk15"/>
      <property name="source.etc" value="${module.source}/etc"/>
      <property name="source.res" value="${module.source}/resources"/>
      <property name="source.stylesheets" value="../testsuite/src/stylesheets"/>

      <!-- Where build generated files will go -->
      <property name="build.reports" value="${module.output}/reports"/>
      <property name="build.stylesheets" value="${module.output}/stylesheets"/>
      <property name="build.classes" value="${module.output}/classes"/>
      <!--
      <property name="build.classes.retro" value="${module.output}/classes-retro"/>
      -->
      <property name="build.lib" value="${module.output}/lib"/>
      <property name="build.api" value="${module.output}/api"/>
      <property name="build.etc" value="${module.output}/etc"/>
      <property name="build.gen-src" value="${module.output}/gen-src"/>
      <property name="build.gen" value="${module.output}/gen"/>
      <property name="build.bootclasspath" value="${module.output}/gen-bootclasspath"/>

      <!-- Install/Release structure -->
      <property name="install.id" value="${module.name}-${module.version}"/>
      <property name="release.id" value="${install.id}"/>
      <property name="install.root" value="${module.output}/${install.id}"/>

      <!-- The combined thirdparty classpath -->
      <path id="thirdparty.classpath">
         <path refid="library.classpath"/>
         <path refid="dependentmodule.classpath"/>
      </path>

      <!-- RMIC should generate stubs compatible with Java 1.2+ -->
      <property name="rmic.stubVersion" value="1.2"/>

      <!-- classpath and local.classpath must have a value using with a path -->
      <property name="classpath" value=""/>
      <property name="local.classpath" value=""/>

      <!-- The classpath required to build classes. -->
      <path id="javac.classpath">
         <pathelement path="${classpath}"/>
         <pathelement path="${local.classpath}"/>
         <path refid="thirdparty.classpath"/>
      </path>

      <path id="javac.jrockit.classpath">
         <path refid="javac.classpath"/>
         <path path="${jrockit.home}/jre/lib/${JROCKIT_API_AVAILABLE}"/>
      </path>

      <path id="javac15.classpath">
         <pathelement path="${build.classes}"/>
         <path refid="javac.classpath"/>
      </path>
      <!-- The classpath required to build javadocs. -->
      <path id="javadoc.classpath">
         <path refid="javac.classpath"/>
      </path>

<!--
      <path id="jbossretro.classpath">
         <path refid="apache.ant.classpath"/>
         <path refid="javassist.classpath"/>
         <path refid="jboss.jboss.retro.classpath"/>
         <path refid="jboss.backport.concurrent.classpath"/>
      </path>
      -->


      <!-- Packages to include when generating api documentation -->
      <property name="javadoc.packages" value="org.jbos.aop.*"/>

   </target>


   <!-- ================================================================== -->
   <!-- Compile                                                            -->
   <!-- ================================================================== -->

   <!--
      | Compile everything.
      |
      | This target should depend on other compile-* targets for each
      | different type of compile that needs to be performed, short of
      | documentation compiles.
    -->

  <!-- Generate parsers -->
  <target name="generate-parsers" depends="init">
    <!--
       | make sure to generate the JBoss-QL parser first so the node
       | interface is keyed to JBossQLParserVisitor.
      -->

    <!-- JBoss-QL parser -->
     <jjtree
       target="${source.java}/org/jboss/aop/pointcut/ast/pointcut.jjt"
       outputdirectory="${source.java}/org/jboss/aop/pointcut/ast"
       javacchome="${sun.javacc.lib}"/>

     <javacc
       target="${source.java}/org/jboss/aop/pointcut/ast/pointcut.jj"
       javacchome="${sun.javacc.lib}"/>

     <jjtree
       target="${source.java}/org/jboss/aop/pointcut/ast/typeExpression.jjt"
       outputdirectory="${source.java}/org/jboss/aop/pointcut/ast"
       javacchome="${sun.javacc.lib}"/>

     <javacc
       target="${source.java}/org/jboss/aop/pointcut/ast/typeExpression.jj"
       javacchome="${sun.javacc.lib}"/>

  </target>

   <target name="compile"
      description="Compile all source files."
      depends="compile-classes, compile-etc, compile-jrockit-classes"/>

   <!-- Compile all class files -->
   <target name="compile-classes" depends="init">
      <mkdir dir="${build.classes}"/>
      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         target="1.5"
         source="1.5"
         debug= "${javac.debug}"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         includes="${javac.includes}"
         excludes="${javac.excludes}"
         failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <exclude name="org/jboss/aop/definition/**"/>
         <exclude name="org/jboss/aop/hook/JRockit*"/>
         <classpath refid="javac.classpath"/>
      </javac>
   </target>

   <target name="compile-jrockit-classes" depends="init" if="JROCKIT_API_AVAILABLE">
      <mkdir dir="${build.classes}"/>
      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         target="1.4"
         source="1.4"
         debug= "${javac.debug}"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         includes="${javac.includes}"
         excludes="${javac.excludes}"
         failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <include name="org/jboss/aop/hook/JRockit*"/>
         <exclude name="org/jboss/aop/definition/**"/>
         <classpath refid="javac.jrockit.classpath"/>
      </javac>
   </target>

   <!-- Compile manifests -->
   <target name="compile-etc" depends="init">
      <mkdir dir="${build.etc}"/>
      <copy todir="${build.etc}" filtering="yes">
         <fileset dir="${source.etc}">
            <include name="**"/>
         </fileset>
      </copy>
   </target>

<!--
   <target name="retrotranslate" depends="compile-classes">
      <mkdir dir="${build.classes.retro}"/>

      <taskdef name="retro" classname="org.jboss.ant.tasks.retro.Retro" classpathref="jbossretro.classpath"/>
      <retro compilerclasspathref="jbossretro.classpath" destdir="${build.classes.retro}">
         <classpath refid="jbossretro.classpath"/>
         <classpath refid="javac15.classpath"/>
         <classpath>
            <pathelement path="${build.classes}"/>
         </classpath>
         <src path="${build.classes}"/>
      </retro>
   </target>
   -->

   <!-- ================================================================== -->
   <!-- Archives                                                           -->
   <!-- ================================================================== -->

   <!--
      | Build all jar files.
    -->
   <target name="jars" description="Builds all jar files."
      depends="_buildmagic:build-bypass-check, source-jar"
      unless="build-bypass.on">

      <call target="compile"/>

      <mkdir dir="${build.lib}"/>

      <!-- Build the jboss-aop.jar -->
      <!--
      <jar jarfile="${build.lib}/jboss-aop.jar"
         manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes.retro}">
            <include name="org/jboss/aop/**"/>
            <include name="org/jboss/lang/**"/>
            <include name="org/jboss/aspects/**"/>
         </fileset>
         <fileset file="docs/jboss-aop_1_0.dtd"/>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
      -->

<!--
      <jar jarfile="${build.lib}/jdk14-pluggable-instrumentor.jar"
         manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes.retro}">
            <include name="org/jboss/aop/hook/JDK14*.class"/>
         </fileset>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
      -->

      <!-- Update the build marker to allow bypassing -->
      <touch file="${build-bypass.marker}"/>

   </target>

   <target name="jars-jrockit" description="Builds all jar files."
      depends="jars,compile-jrockit-classes" if="JROCKIT_API_AVAILABLE">

      <jar jarfile="${build.lib}/jrockit-pluggable-instrumentor.jar"
         manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes}">
            <include name="org/jboss/aop/hook/JRockitPluggableClassPreProcessor.class"/>
            <include name="org/jboss/aop/hook/JDK14*.class"/>
         </fileset>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
   </target>

   <target name="jars15" description="Builds all jar files."
      depends="compile-classes, source-jar">

      <mkdir dir="${build.lib}"/>

      <!-- Build the jboss-aop-jdk50.jar -->
      <jar jarfile="${build.lib}/jboss-aop-jdk50.jar"
         manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes}">
            <exclude name="org/jboss/aop/standalone/PluggableInstrumentor.class"/>
         </fileset>
         <fileset file="docs/jboss-aop_1_0.dtd"/>
         <fileset file="docs/jboss-aop_2_0.xsd"/>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
     <jar jarfile="${build.lib}/pluggable-instrumentor.jar"
         manifest="${build.etc}/pluggable-instrumentor.mf">
         <fileset dir="${build.classes}">
            <!-- Include everything else -->
            <include name="org/jboss/aop/standalone/PluggableInstrumentor.class"/>
         </fileset>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
      <!-- Build the jboss-aop-jdk50-client.jar needed for EJB 3-->
      <jar jarfile="${build.lib}/jboss-aop-jdk50-client.jar"
         manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes}">
            <!-- Include everything else -->
            <include name="org/jboss/lang/**"/>
            <include name="org/jboss/aop/Advisor.class"/>
            <include name="org/jboss/aop/AspectManager.class"/>
            <include name="org/jboss/aop/AspectManager$*.class"/>
            <include name="org/jboss/aop/ClassAdvisor.class"/>
            <include name="org/jboss/aop/ClassInstanceAdvisor.class"/>
            <include name="org/jboss/aop/DynamicAOPStrategy.class"/>
            <include name="org/jboss/aop/InstanceAdvisorDelegate.class"/>
            <include name="org/jboss/aop/Domain.class"/>
            <include name="org/jboss/aop/InstanceAdvisor.class"/>
            <include name="org/jboss/aop/MethodInfo.class"/>
            <include name="org/jboss/aop/InterceptorChainObserver.class"/>
            <include name="org/jboss/aop/JoinPoint.class"/>
            <include name="org/jboss/aop/JoinPointInfo.class"/>
            <include name="org/jboss/aop/MethodJoinPoint.class"/>
            <include name="org/jboss/aop/*Dispatcher*.class"/>
            <include name="org/jboss/aop/*Advised.class"/>
         	<include name="org/jboss/aop/WeavingStrategy.class"/>
            <include name="org/jboss/aop/advice/AspectDefinition.class"/>
            <include name="org/jboss/aop/advice/Interceptor.class"/>
            <include name="org/jboss/aop/instrument/Untransformable.class"/>
            <include name="org/jboss/aop/joinpoint/Invocation*.class"/>
            <include name="org/jboss/aop/joinpoint/Joinpoint.class"/>
            <include name="org/jboss/aop/joinpoint/JoinPointBean.class"/>
            <include name="org/jboss/aop/joinpoint/MethodExecution.class"/>
            <include name="org/jboss/aop/joinpoint/MethodInvocation*.class"/>
            <include name="org/jboss/aop/joinpoint/MethodJoinpoint.class"/>
         	<include name="org/jboss/aop/metadata/SimpleMetaData.class"/>
            <include name="org/jboss/aop/metadata/SimpleMetaData$MetaDataValue.class"/>
            <include name="org/jboss/aop/metadata/MetaDataResolver.class"/>
            <include name="org/jboss/aop/metadata/ThreadMetaData.class"/>
         	<include name="org/jboss/aop/pointcut/PointcutStats.class"/>
            <include name="org/jboss/aop/proxy/MarshalledInterfaceProxy.class"/>
            <include name="org/jboss/aop/proxy/MethodMapped.class"/>
            <include name="org/jboss/aop/proxy/Proxy.class"/>
            <include name="org/jboss/aop/proxy/ProxyFactory.class"/>
            <include name="org/jboss/aop/proxy/ProxyMixin.class"/>
            <include name="org/jboss/aop/proxy/container/*.class"/>
            <include name="org/jboss/aop/util/SecurityActions*.class"/>
            <include name="org/jboss/aop/util/Marshalled*.class"/>
            <include name="org/jboss/aop/util/MethodHashing*.class"/>
            <include name="org/jboss/aop/util/PayloadKey*.class"/>
         </fileset>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
      
      <jar jarfile="${build.lib}/jboss-aop-jdk50-single.jar" manifest="${build.etc}/default.mf">
         <zipfileset src="${build.lib}/jboss-aop-jdk50.jar"/>
         <zipfileset src="${javassist.javassist.lib}/javassist.jar"/>
         <zipfileset src="${jboss.common.core.lib}/jboss-common-core.jar"/>
         <zipfileset src="${jboss.jboss.reflect.lib}/jboss-reflect.jar"/>
         <zipfileset src="${jboss.jboss.mdr.lib}/jboss-mdr.jar"/>
         <zipfileset src="${jboss.common.logging.log4j.lib}/jboss-logging-log4j.jar"/>
         <zipfileset src="${jboss.common.logging.spi.lib}/jboss-logging-spi.jar"/>
         <zipfileset src="${apache.log4j.lib}/log4j.jar"/>
         <zipfileset src="${trove.trove.lib}/trove.jar"/>
         <fileset file ="${source.etc}/jbossorg-eula.txt"/>
      </jar>
   </target>

	<target name="source-jar" depends="compile-etc">
      <mkdir dir="${build.lib}"/>
      <jar destfile="${build.lib}/jboss-aop-src.zip"
         manifest="${build.etc}/default.mf">
      	<fileset dir="${source.java}">
      	</fileset>
     	</jar>
	</target>

   <!-- ================================================================== -->
   <!-- Install & Release                                                  -->
   <!-- ================================================================== -->

   <target name="dist" depends="javadocs, init">
   </target>

   <target name="install"
      description="Install the structure for a release."
      depends="all, _buildmagic:install:default, dist"/>

   <target name="release" depends="install">
   </target>

   <target name="release-zip"
      description="Builds a ZIP distribution."
      depends="release, _buildmagic:release:zip"/>

   <target name="release-tar"
      description="Builds a TAR distribution."
      depends="release, _buildmagic:release:tar"/>

   <target name="release-tgz"
      description="Builds a TAR-GZ distribution."
      depends="release, _buildmagic:release:tgz"/>

   <target name="release-all"
      description="Builds a distribution for each archive type."
      depends="release-zip, release-tgz"/>


   <!-- ================================================================== -->
   <!-- Cleaning                                                           -->
   <!-- ================================================================== -->

   <!-- Clean up all build output -->
   <target name="clean"
      description="Cleans up most generated files."
      depends="_buildmagic:clean">
   </target>

   <!-- Clean up all generated files -->
   <target name="clobber"
      description="Cleans up all generated files."
      depends="_buildmagic:clobber, clean">
   </target>


   <!-- ===============================================================p=== -->
   <!-- Misc.                                                              -->
   <!-- ================================================================== -->

   <target name="main" depends="most"
      description="Executes the default target (most)."/>

   <target name="all" depends="jars, jars15, jars-jrockit, docs"
      description="Builds everything."/>

   <target name="most" depends="jars, jars15, jars-jrockit"
      description="Builds almost everything."/>

   <target name="help"
      description="Show this help message."
      depends="_buildmagic:help:standard"/>

   <target name="create-eclipse-test-agent" depends="compile-etc">
      <jar jarfile="${build.lib}/eclipse-agent.jar"
         manifest="${build.etc}/eclipsesupport.mf">
      </jar>
   </target>

   <!-- Copied from buildmagic and edited -->
   <target name="public-api" depends="_buildmagic:init">
      
      <property name="build.public.api" value="${module.output}/public_api"/>
      
      <javadoc sourcepath="${source.java}"
          destdir="${build.public.api}"
          classpathref="javac.classpath"
          windowtitle="${javadoc.windowtitle}"
          splitindex="${javadoc.splitindex}"
          author="${javadoc.author}"
          version="${javadoc.version}"
          public="${javadoc.public}"
          package="${javadoc.package}"
          protected="${javadoc.protected}"
          private="${javadoc.private}"
          use="${javadoc.use}"
          verbose="${javadoc.verbose}">
          <doctitle><![CDATA[<h1>${module.Name} Final User API Documentation</h1>]]></doctitle>
          <bottom><![CDATA[
            <i>
            <div align="center">
              <font size="-1">Copyright &#169; 2004 JBoss Inc. All Rights Reserved.</font>
            </div>
            </i>
          ]]></bottom>
         <source file="${source.java}/org/jboss/aop/AdviceType.java"/>
         <source file="${source.java}/org/jboss/aop/Advised.java"/>
         <source file="${source.java}/org/jboss/aop/Advisor.java"/>
         <source file="${source.java}/org/jboss/aop/AnnotationIntroductionDef.java"/>
         <source file="${source.java}/org/jboss/aop/Aspect.java"/>
         <source file="${source.java}/org/jboss/aop/AspectManager.java"/>
         <source file="${source.java}/org/jboss/aop/CallerConstructorInfo.java"/>
         <source file="${source.java}/org/jboss/aop/CallerMethodInfo.java"/>
         <source file="${source.java}/org/jboss/aop/CFlowDef.java"/>
         <source file="${source.java}/org/jboss/aop/CFlowStackDef.java"/>
         <source file="${source.java}/org/jboss/aop/ClassAdvisor.java"/><!--?? Keep this one??? -->
         <source file="${source.java}/org/jboss/aop/ConByConInfo.java"/>
         <source file="${source.java}/org/jboss/aop/ConByMethodInfo.java"/>
         <source file="${source.java}/org/jboss/aop/ConstructionInfo.java"/>
         <source file="${source.java}/org/jboss/aop/ConstructorInfo.java"/>
         <source file="${source.java}/org/jboss/aop/DeclareError.java"/>
         <source file="${source.java}/org/jboss/aop/DeclareWarning.java"/>
         <source file="${source.java}/org/jboss/aop/Domain.java"/>
         <source file="${source.java}/org/jboss/aop/DomainDefinition.java"/> <!-- Keep this one?? -->
         <source file="${source.java}/org/jboss/aop/DynamicCFlowDef.java"/>
         <source file="${source.java}/org/jboss/aop/FieldInfo.java"/>
         <source file="${source.java}/org/jboss/aop/MethodByConInfo.java"/>
         <source file="${source.java}/org/jboss/aop/MethodByMethodInfo.java"/>
         <source file="${source.java}/org/jboss/aop/MethodInfo.java"/>
         <source file="${source.java}/org/jboss/aop/InstanceAdvised.java"/>
         <source file="${source.java}/org/jboss/aop/InstanceAdvisor.java"/>
         <source file="${source.java}/org/jboss/aop/InstanceDomain.java"/> <!--?? Keep this one here?? -->
         <source file="${source.java}/org/jboss/aop/Introduction.java"/>
         <source file="${source.java}/org/jboss/aop/Mixin.java"/>
         <source file="${source.java}/org/jboss/aop/PointcutDef.java"/>
         <source file="${source.java}/org/jboss/aop/Precedence.java"/>
         <source file="${source.java}/org/jboss/aop/PrecedenceAdvice.java"/>
         <source file="${source.java}/org/jboss/aop/PrecedenceInterceptor.java"/>
         <source file="${source.java}/org/jboss/aop/Prepare.java"/>
         <source file="${source.java}/org/jboss/aop/TypeDef.java"/>
         <source file="${source.java}/org/jboss/aop/advice/AdviceBinding.java"/>
         <source file="${source.java}/org/jboss/aop/advice/AdviceFactory.java"/>
         <source file="${source.java}/org/jboss/aop/advice/AspectDefinition.java"/>
         <source file="${source.java}/org/jboss/aop/advice/AspectFactory.java"/>
         <source file="${source.java}/org/jboss/aop/advice/GenericAspectFactory.java"/>
         <source file="${source.java}/org/jboss/aop/advice/GenericInterceptorFactory.java"/>
         <source file="${source.java}/org/jboss/aop/advice/Interceptor.java"/>
         <source file="${source.java}/org/jboss/aop/advice/InterceptorFactory.java"/>
         <source file="${source.java}/org/jboss/aop/advice/InvalidAdviceException.java"/>
         <source file="${source.java}/org/jboss/aop/advice/NoMatchingAdviceException.java"/>
         <source file="${source.java}/org/jboss/aop/advice/Scope.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Arg.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Args.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Caller.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/JoinPoint.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Return.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Target.java"/>
         <source file="${source.java}/org/jboss/aop/advice/annotation/Thrown.java"/>
         <source file="${source.java}/org/jboss/aop/annotation/compiler/AnnotationCompiler.java"/> <!-- ?? Investigate more on this package before decide what to keep here -->
         <source file="${source.java}/org/jboss/aop/ant/AnnotationC.java"/>
         <source file="${source.java}/org/jboss/aop/ant/AopC.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/CallerInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/ConstructionInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/ConstructorCalledByConstructorInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/ConstructorCalledByMethodInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/ConstructorInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/CurrentInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/FieldInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/FieldReadInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/FieldWriteInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/Invocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/Joinpoint.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/MethodCalledByConstructorInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/MethodCalledByMethodInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/joinpoint/MethodInvocation.java"/>
         <source file="${source.java}/org/jboss/aop/metadata/SimpleMetaData.java"/>
         <!-- TODO add metadata binding here -->
         <source file="${source.java}/org/jboss/aop/pointcut/DynamicCFlow.java"/>
         <source file="${source.java}/org/jboss/aop/pointcut/Pointcut.java"/>
         <source file="${source.java}/org/jboss/aop/pointcut/ast/ParseException.java"/>
         
         
         <link href="http://java.sun.com/j2se/1.5.0/docs/api/"/>
      </javadoc>
   </target>

</project>
