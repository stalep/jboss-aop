<?xml version='1.0' encoding="iso-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.3CR3//EN"
                      "../../../../../docbook-support/support/docbook-dtd/docbookx.dtd"
[
<!ENTITY terms                  SYSTEM "modules/terms.xml">
<!ENTITY implementing           SYSTEM "modules/implementing.xml">
<!ENTITY pointcuts              SYSTEM "modules/pointcuts.xml">
<!ENTITY advices                SYSTEM "modules/advices.xml">
<!ENTITY xml                    SYSTEM "modules/xml.xml">
<!ENTITY annotated              SYSTEM "modules/annotated.xml">
<!ENTITY dynamic                SYSTEM "modules/dynamic.xml">
<!ENTITY annotationcompiler     SYSTEM "modules/annotationcompiler.xml">
<!ENTITY installing             SYSTEM "modules/installing.xml">
<!ENTITY compiling              SYSTEM "modules/compiling.xml">
<!ENTITY running                SYSTEM "modules/running.xml">
<!ENTITY reflection             SYSTEM "modules/reflection.xml">
<!ENTITY aopide                 SYSTEM "modules/aopide.xml">
]>

<book lang="en">

   <bookinfo>
      <title>JBoss AOP - Aspect-Oriented Framework for Java</title>
      <subtitle>JBoss AOP Reference Documentation</subtitle>
      <releaseinfo>2.0.0</releaseinfo>
   </bookinfo>

   <toc/>

   <preface id="preface" revision="1">
      <title>Preface</title>

      <para>
            Aspect-Oriented Programming (AOP) is a new  paradigm that allows you to organize
            and layer your software applications in ways that are impossible with traditional
            object-oriented approaches.  Aspects allow you to transparently glue functionality together
            so that you can have a more layered design.  AOP allows you to intercept any event in a Java
            program and trigger functionality based on those events.  Mixins allow you to introduce
            multiple inheritance to Java so that you can provide APIs for your aspects.  Combined with 
            JDK 5.0 annotations, it allows you to extend the Java language with new syntax.
      </para>

      <para>
            JBoss AOP is a 100% Pure Java aspected oriented framework usable in any programming 
            environment or tightly integrated with  our application server.
      </para>

      <para>
            This document is meant to be a boring reference guide.  It focuses solely on syntax and APIs
            and worries less about providing real world examples. Please see our "User Guide: The Case for Aspects"
            document for a more interesting discussion on the use of aspects.
      </para>

      <para>
             If you have questions, use the user forum linked on the JBoss AOP website. We also
             provide tracking links for tracking bug reports and feature requests. If you
             are interested in the development of JBoss AOP, post a message on the forum. If
             you are interested in translating this documentation into your language, contact us
             on the developer mailing list.
      </para>

      <para>
             Commercial development support, production support and training for JBoss AOP is
             available through JBoss Inc. (see http://www.jboss.org/).
             JBoss AOP is a project of the JBoss Professional Open Source product suite.
      </para>

      <para>
         In some of the example listings, what is meant to be displayed on one line does not fit 
         inside the available page width. These lines have been broken up. A '\' at the end of a 
         line means that a break has been introduced to fit in the page, with the following lines
         indented. So:
         <programlisting>
   Let's pretend to have an extremely \
      long line that \
      does not fit
   This one is short
         </programlisting>
         Is really:
         <programlisting>
   Let's pretend to have an extremely long line that does not fit
   This one is short
         </programlisting>
      </para>
   </preface>

   &terms;

   &implementing;

   &pointcuts;

   &advices;
   
   &xml;

   &annotated;

   &dynamic;

   &annotationcompiler;

   &installing;

   &compiling;

   &running;

   &reflection;

   &aopide;
</book>

