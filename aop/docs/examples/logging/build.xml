<?xml version="1.0" encoding="UTF-8"?>

<project default="usage_" name="JBoss/AOP">
   <import file="../examples-build.xml"/>
	
   <target name="usage_">
      <echo>Run one of the following targets:</echo>
      <echo> ant run.loadtime.nologging            Run with loadtime weaving and no logging</echo>
      <echo> ant run.loadtime.system.out.logging   Run with loadtime weaving and logging via System.out</echo>
      <echo> ant run.loadtime.log4j.logging        Run with loadtime weaving and logging via log4j</echo>
      <echo> ant run.aopc.nologging                Run with compile-time weaving and no logging</echo>
      <echo> ant run.aopc.system.out.logging       Run with compile-time weaving and logging via System.out</echo>
      <echo> ant run.aopc.log4j.logging            Run with compile-time weaving and logging via log4j</echo>
   </target>
   
   <target name="run.loadtime.nologging" depends="_compile">
      <!-- 
         We exclude log4j.jar and jboss-logging-log4j.jar, which does not make a difference
         since we do not use logging anyway
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
            <exclude name="log4j.jar"/>
            <exclude name="jboss-logging-log4j.jar"/>
         </fileset>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
   
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Include this for clarity, the default is false -->
         <sysproperty key="jboss.aop.verbose" value="false"/>
         <jvmarg value="-javaagent:${aopjar}"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>

   <target name="run.loadtime.system.out.logging" depends="_compile">
      <!-- 
         We exclude log4j.jar and jboss-logging-log4j.jar, so when we turn on logging 
         we will just write to System.out
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
            <exclude name="log4j.jar"/>
            <exclude name="jboss-logging-log4j.jar"/>
         </fileset>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
   
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn logging on -->
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <jvmarg value="-javaagent:${aopjar}"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>

   <target name="run.loadtime.log4j.logging" depends="_compile">
      <!-- 
         We include log4j.jar and jboss-logging-log4j.jar, so when we turn on logging the 
         we will use log4j configured with a log4j.properties file
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
         </fileset>
         <!-- We need a log4j.properties on the classpath -->
         <fileset file="log4j.properties"/>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
   
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn logging on -->
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <jvmarg value="-javaagent:${aopjar}"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>

   <target name="aopc.no.logging" depends="_compile">
      <!-- 
         We exclude log4j.jar and jboss-logging-log4j.jar, which does not make a difference
         since we do not use logging anyway
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
            <exclude name="log4j.jar"/>
            <exclude name="jboss-logging-log4j.jar"/>
         </fileset>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
      <taskdef name="aopc" classname="org.jboss.aop.ant.AopC" classpathref="aop.classpath"/>
   
      <aopc compilerclasspathref="run.classpath" classpathref="run.classpath">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Include this for clarity, the default is false -->
         <sysproperty key="jboss.aop.verbose" value="false"/>
         <classpath path="."/>
         <src path="."/>
         <aoppath path="jboss-aop.xml"/>
      </aopc>   
   </target>  
   
   <target name="run.aopc.nologging" depends="aopc.no.logging">
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>
   
   <target name="aopc.system.out.logging" depends="_compile">
      <!-- 
         We exclude log4j.jar and jboss-logging-log4j.jar, so when we turn on logging 
         we will just write to System.out
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
            <exclude name="log4j.jar"/>
            <exclude name="jboss-logging-log4j.jar"/>
         </fileset>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
      <taskdef name="aopc" classname="org.jboss.aop.ant.AopC" classpathref="aop.classpath"/>
   
      <aopc compilerclasspathref="run.classpath" classpathref="run.classpath">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn on logging -->  
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <classpath path="."/>
         <src path="."/>
         <aoppath path="jboss-aop.xml"/>
      </aopc>
   </target>
  
   <target name="run.aopc.system.out.logging" depends="aopc.system.out.logging">
   
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn on logging although nothing is really being woven at runtime -->  
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>

   <target name="aopc.log4j.logging" depends="_compile">
      <!-- 
         We include log4j.jar and jboss-logging-log4j.jar, so when we turn on logging the 
         we will use log4j configured with a log4j.properties file
      -->
      <path id="aop.classpath">
         <fileset dir="${jboss.aop.lib}">
            <include name="*.jar"/>
         </fileset>
         <!-- We need a log4j.properties on the classpath -->
         <fileset file="log4j.properties"/>
      </path>
      <path id="run.classpath">
         <path refid="aop.classpath"/>
         <pathelement location="."/>
      </path>
      <taskdef name="aopc" classname="org.jboss.aop.ant.AopC" classpathref="aop.classpath"/>
   
      <aopc compilerclasspathref="run.classpath" classpathref="run.classpath">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn on logging -->  
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <classpath path="."/>
         <src path="."/>
         <aoppath path="jboss-aop.xml"/>
      </aopc>
   </target>

   <target name="run.aopc.log4j.logging" depends="aopc.log4j.logging">
      <java fork="yes" failOnError="true" className="Driver">
         <sysproperty key="jboss.aop.path" value="jboss-aop.xml"/>
         <!-- Turn on logging although nothing is really being woven at runtime -->  
         <sysproperty key="jboss.aop.verbose" value="true"/>
         <classpath refid="run.classpath"/>
      </java>
   </target>

</project>

