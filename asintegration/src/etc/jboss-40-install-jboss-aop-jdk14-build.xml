<?xml version="1.0" encoding="UTF-8"?>

<project default="install" name="JBoss/AOP Application Server installation">

   <target name="setup">
      <!-- ========================================= -->
      <!-- Set the jboss root and server config here -->
      <!-- ========================================= -->
      <property file="jboss.properties"/>

      <!-- The rest are automatic -->
      <property name="jboss.config.dir" value="${jboss.home}/server/${jboss.config}"/>

      <available file="${jboss.home}" property="jboss.exists" type="dir"/>
      <fail unless="jboss.exists" message="${jboss.home} does not exist. Modify 'jboss.home' in build.xml to be a valid root of a jboss installation"/>

      <available file="${jboss.config.dir}" property="config.exists" type="dir"/>
      <fail unless="config.exists" message="${jboss.config.dir} does not exist. Modify 'jboss.config' in build.xml to be a valid server configuration"/>

      <property name="deploy.dir" value="${jboss.config.dir}/deploy"/>

      <!-- An existing AOP 1.5.x installation will have a deployer named as follows -->
      <property name="aop15.deployer" value="${deploy.dir}/jboss-aop.deployer"/>
      <available file="${aop15.deployer}" property="aop15.deployer.exists" type="dir"/>

      <!-- An existing AOP 2.x installation will have a deployer named as follows -->
      <property name="aop2.deployer" value="${deploy.dir}/jboss-aop-jdk14.deployer"/>
      <available file="${aop2.deployer}" property="aop2.deployer.exists" type="dir"/>

      <fail message="Neither ${jdk15.deployer} (JBoss AOP 1.5.x) nor ${aop2.deployer} (JBoss AOP 2.0) exist.">
         <condition>
            <and>
               <not><isset property="aop15.deployer.exists"/></not>
               <not><isset property="aop2.deployer.exists"/></not>
            </and>
         </condition>
      </fail>
   </target>

   <target name="init-has-aop15-deployer" depends="setup" if="aop15.deployer.exists">
      <property name="aspect.deployer" value="${aop15.deployer}"/>
   </target>

   <target name="init-has-aop2-deployer" depends="setup" if="aop2.deployer.exists">
      <property name="aspect.deployer" value="${aop2.deployer}"/>
   </target>

   <target name="init" depends="init-has-aop15-deployer, init-has-aop2-deployer">
      <property name="aspect.library" value="${aspect.deployer}/jboss-aspect-library.jar"/>
      <available file="${aspect.library}" property="library.exists"/>
      <fail unless="library.exists" message="${aspect.library} does not exist."/>

      <property name="old.deployer" value="${jboss.config.dir}/deploy/jboss-aop.deployer.bak"/>
      <available file="${old.deployer}" property="old.deployer.exists"/>

      <property name="lib.javassist" value="${jboss.config.dir}/lib/javassist.jar"/>
      <available file="${lib.javassist}" property="lib.javassist.exists"/>
      <property name="bak.javassist" value="${old.deployer}/lib/javassist.bak"/>
      <available file="${bak.javassist}" property="javassist.bak.exists"/>

      <condition property="backup.lib.javassist" value="true">
         <and>
            <isset property="lib.javassist.exists"/>
            <not>
               <isset property="javassist.bak.exists"/>
             </not>
         </and>
      </condition>

      <property name="client.javassist" value="${jboss.home}/client/javassist.jar"/>
      <available file="${client.javassist}" property="client.javassist.exists"/>
      <property name="bak.client.javassist" value="${jboss.home}/client/javassist.bak"/>
      <available file="${bak.client.javassist}" property="client.javassist.bak.exists"/>
      
      <condition property="backup.client.javassist" value="true">
         <and>
            <isset property="client.javassist.exists"/>
            <not>
               <isset property="client.javassist.bak.exists"/>
             </not>
         </and>
      </condition>

      <!-- old client retro jar swapping  -->
      <property name="client.retro.old" value="${jboss.home}/client/jbossretro-rt.jar"/>
      <available file="${client.retro.old}" property="client.retro.old.exists"/>
      <property name="bak.client.retro.old" value="${jboss.home}/client/jbossretro-rt.bak"/>
      <available file="${bak.client.retro.old}" property="client.retro.old.bak.exists"/>
      
      <condition property="backup.client.retro.old" value="true">
         <and>
            <isset property="client.retro.old.exists"/>
            <not>
               <isset property="client.retro.old.bak.exists"/>
             </not>
         </and>
      </condition>

      <!-- new client retro jar swapping  -->
      <property name="client.retro.new" value="${jboss.home}/client/jboss-retro-rt.jar"/>
      <available file="${client.retro.new}" property="client.retro.new.exists"/>
      <property name="bak.client.retro.new" value="${jboss.home}/client/jboss-retro-rt.bak"/>
      <available file="${bak.client.retro.new}" property="client.retro.new.bak.exists"/>
      
      <condition property="backup.client.retro.new" value="true">
         <and>
            <isset property="client.retro.new.exists"/>
            <not>
               <isset property="client.retro.new.bak.exists"/>
             </not>
         </and>
      </condition>

      <!-- old lib retro jar swapping  -->
      <property name="lib.retro.old" value="${jboss.config.dir}/lib/jbossretro-rt.jar"/>
      <available file="${lib.retro.old}" property="lib.retro.old.exists"/>
      <property name="bak.lib.retro.old" value="${jboss.config.dir}/lib/jbossretro-rt.bak"/>
      <available file="${bak.lib.retro.old}" property="lib.retro.old.bak.exists"/>
      
      <condition property="backup.lib.retro.old" value="true">
         <and>
            <isset property="lib.retro.old.exists"/>
            <not>
               <isset property="lib.retro.old.bak.exists"/>
             </not>
         </and>
      </condition>

      <!-- new lib retro jar swapping  -->
      <property name="lib.retro.new" value="${jboss.config.dir}/lib/jboss-retro-rt.jar"/>
      <available file="${lib.retro.new}" property="lib.retro.new.exists"/>
      <property name="bak.lib.retro.new" value="${jboss.config.dir}/lib/jboss-retro-rt.bak"/>
      <available file="${bak.lib.retro.new}" property="lib.retro.new.bak.exists"/>
      
      <condition property="backup.lib.retro.new" value="true">
         <and>
            <isset property="lib.retro.new.exists"/>
            <not>
               <isset property="lib.retro.new.bak.exists"/>
             </not>
         </and>
      </condition>

   </target>

   <target name="prepare-aspect-library" depends="init">
      <delete file="jboss-aspect-library.jar"/>
      <mkdir dir="aspect-library-temp"/>
      <unjar src="${aspect.library}" dest="aspect-library-temp"/>

      <!-- Get rid of the files that exist in jboss-aop-as4-deplyer.jar -->
      <delete dir="aspect-library-temp/org/jboss/aop"/>

      <!-- Get rid of the files that exist in jboss-standalone-aspect-library-jdk14.jar -->
      <delete dir="aspect-library-temp/org/jboss/aspects/asynchronous"/>
      <delete dir="aspect-library-temp/org/jboss/aspects/concurrent"/>
      <delete dir="aspect-library-temp/org/jboss/aspects/dbc"/>
      <delete dir="aspect-library-temp/org/jboss/aspects/jmx"/>
      <delete dir="aspect-library-temp/org/jboss/aspects/logging"/>
      <delete dir="aspect-library-temp/org/jboss/aspects/patterns"/>
      <delete file="aspect-library-temp/org/jboss/aspects/*.class"/>

      <jar destfile="jboss-aspect-library.jar" basedir="aspect-library-temp" manifest="aspect-library-temp/META-INF/MANIFEST.MF"/>

      <delete dir="aspect-library-temp"/>
   </target>

   <target name="backup" depends="prepare-aspect-library" unless="old.deployer.exists">
      <echo>Backing up existing aop deployer to ${old.deployer}</echo>
      <copy todir="${old.deployer}">
         <fileset dir="${aspect.deployer}"/>
      </copy>
      <delete dir="${aspect.deployer}"/>
   </target>

   <target name="install.deployer" depends="backup">
      <copy todir="${deploy.dir}">
         <fileset dir="..">
            <include name="jboss-aop-jdk14.deployer/**/*.jar"/>
            <include name="jboss-aop-jdk14.deployer/META-INF/*"/>
            <exclude name="build.xml"/>
            <exclude name="jboss.properties"/>
         </fileset>
      </copy>
      <copy todir="${deploy.dir}/jboss-aop-jdk14.deployer" file="${old.deployer}/base-aop.xml"/>

      <antcall target="make-annotations-compatible">
         <param name="jar" value="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-aspect-library.jar"/>
         <param name="input" value="annotations.txt"/>
      </antcall>
   </target>

   <target name="make-annotations-compatible" depends="init">
      <!--
         The name of the jar file whose JDK 1.4 interfaces defining annotations we want to weave to
         be usable with JBoss Retro
      -->
      <fail unless="jar" message="You need to specify a jar file"/>

      <!--
         The file containing the names of the classes to weave
      -->
      <fail unless="input" message="You need to specify a file listing all the interfaces"/>


      <tempfile property="temp.dir" prefix="aop"/>
      <unjar src="${jar}" dest="${temp.dir}"/>

      <java classname="org.jboss.aop.util.ForceInterfaceToImplementAnnotation">
         <classpath>
            <pathelement path="jboss-aop.jar"/>
            <pathelement path="javassist.jar"/>
            <pathelement path="jboss-retro-rt.jar"/>
         </classpath>

         <arg value="${temp.dir}"/>
         <arg value="${input}"/>
      </java>

      <jar destfile="${jar}" basedir="${temp.dir}" manifest="${temp.dir}/META-INF/MANIFEST.MF"/>
      <delete dir="${temp.dir}"/>
   </target>

   <target name="backup.lib.javassist" depends="init" if="backup.lib.javassist">
      <copy file="${lib.javassist}" tofile="${bak.javassist}" overwrite="true"/>
   </target>
   
   <target name="install.lib.javassist" depends="backup.lib.javassist" if="lib.javassist.exists">
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/javassist.jar"/>
   	<copy file="javassist.jar" tofile="${lib.javassist}" overwrite="true"/>
   </target>

   <target name="backup.client.javassist" depends="init" if="backup.client.javassist">
      <copy file="${client.javassist}" tofile="${bak.client.javassist}" overwrite="true"/>
   </target>
   
   <target name="install.client.javassist" depends="backup.client.javassist" if="client.javassist.exists">
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/javassist.jar"/>
   	<copy file="javassist.jar" tofile="${client.javassist}" overwrite="true"/>
   </target>

   <target name="backup.client.retro.old" depends="init" if="backup.client.retro.old">
      <copy file="${client.retro.old}" tofile="${bak.client.retro.old}" overwrite="true"/>
   </target>

   <target name="install.client.retro.old" depends="backup.client.retro.old" if="client.retro.old.exists">
   	<copy file="jboss-retro-rt.jar" tofile="${client.retro.old}" overwrite="true"/>
   </target>

   <target name="backup.client.retro.new" depends="init" if="backup.client.retro.new">
      <copy file="${client.retro.new}" tofile="${bak.client.retro.new}" overwrite="true"/>
   </target>

   <target name="install.client.retro.new" depends="backup.client.retro.new" if="client.retro.new.exists">
   	<copy file="jboss-retro-rt.jar" tofile="${client.retro.new}" overwrite="true"/>
   </target>

   <target name="backup.lib.retro.old" depends="init" if="backup.lib.retro.old">
      <copy file="${lib.retro.old}" tofile="${bak.lib.retro.old}" overwrite="true"/>
   </target>

   <target name="install.lib.retro.old" depends="backup.lib.retro.old" if="lib.retro.old.exists">
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-retro-rt.jar"/>
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-backport-concurrent.jar"/>
   	<copy file="jboss-retro-rt.jar" tofile="${lib.retro.old}" overwrite="true"/>
   </target>

   <target name="backup.lib.retro.new" depends="init" if="backup.lib.retro.new">
      <copy file="${lib.retro.new}" tofile="${bak.lib.retro.new}" overwrite="true"/>
   </target>

   <target name="install.lib.retro.new" depends="backup.lib.retro.new" if="lib.retro.new.exists">
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-retro-rt.jar"/>
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-backport-concurrent.jar"/>
   	<copy file="jboss-retro-rt.jar" tofile="${lib.retro.new}" overwrite="true"/>
   </target>

  
  <!--
   <target name="install.lib.retro" depends="backup.lib.retro" if="lib.retro.exists">
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-retro-rt.jar"/>
      <delete file="${deploy.dir}/jboss-aop-jdk14.deployer/jboss-backport-concurrent.jar"/>
   	<copy file="jboss-retro-rt.jar" tofile="${lib.retro}" overwrite="true"/>
   </target>
   -->

   <target name="install.post.4.0.4" depends="install.lib.javassist, install.client.javassist, install.client.retro.old, install.client.retro.new, install.lib.retro.old, install.lib.retro.new"/>

   <target name="install" depends="install.deployer, install.post.4.0.4"/>
</project>
